#!/bin/bash
#
# Description
# -----------
# Switch to appropriate (or given) Virtual Environment.
# 1. Use the virtual environment given by the argument 
# 2. If above is not possible, use the VENV "here" named "nodeenv"
# 3. If above is not possible, use the VENV pointed by $SCADAJS_X_VENV variable
#
set -e -o pipefail
safe_source () { [[ ! -z ${1:-} ]] && source $1; _dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"; _sdir=$(dirname "$(readlink -f "$0")"); }; safe_source
_sdir=$(dirname $(realpath ${BASH_SOURCE[0]}))

LOCAL_VENV="$_sdir/nodeenv"

[[ -d "$LOCAL_VENV" ]] && SCADAJS_VENV_PATH=$LOCAL_VENV

_sourced=
if [[ "${BASH_SOURCE[0]}" != "${0}" ]]; then
    #echo "script ${BASH_SOURCE[0]} is being sourced ..."
    _sourced="yes"
else
    [[ -n ${1:-} ]] && SCADAJS_VENV_PATH="$1"
fi

if [[ ! -d "$SCADAJS_VENV_PATH" ]]; then
    if [[ -n $SCADAJS_VENV_PATH ]]; then
        echo "$SCADAJS_VENV_PATH variable is set but it's not a valid directory."
        echo "Please ensure that $SCADAJS_VENV_PATH is a valid virtual environment"
    else
        cat <<EOL

    ERROR: We need a virtual environment to work. 

    Please do one of the followings:

    1. Create a virtual environment in THIS directory and name it "nodeenv".
    2. Set \$SCADAJS_VENV_PATH variable in your startup script.
    3. Pass the virtual environment path as the first argument to this script.

EOL
    fi
    exit 1
fi

echo "Using nodeenv at ${SCADAJS_VENV_PATH}"
if [[ -z $_sourced ]]; then
    bash --rcfile <(echo ". ~/.bashrc; . ${SCADAJS_VENV_PATH}/bin/activate")
else
    . ${SCADAJS_VENV_PATH}/bin/activate
fi

