#!/bin/bash
set -e -o pipefail
safe_source () { [[ ! -z ${1:-} ]] && source $1; _dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"; _sdir=$(dirname "$(readlink -f "$0")"); }; safe_source
_sdir=$(dirname $(realpath ${BASH_SOURCE[0]}))

# Use ./nodeenv if exists
LOCAL_VENV="$_sdir/nodeenv"
[[ -d "$LOCAL_VENV" ]] && SCADAJS_VENV_PATH=$LOCAL_VENV

# Check if this script is sourced
_sourced=
if [[ "${BASH_SOURCE[0]}" != "${0}" ]]; then
    #echo "script ${BASH_SOURCE[0]} is being sourced ..."
    _sourced="yes"
else
    [[ -n ${1:-} ]] && SCADAJS_VENV_PATH="$1"
fi

# For Tmux VirtualEnv support
tmux_get_var(){
    local key=$1
    [[ -n "$TMUX" ]] && tmux showenv | awk -F= -v key="$key" '$1==key {print $2}'
}

# Get environment variable from within the TMUX session
venv=$(tmux_get_var "SCADAJS_VENV_PATH") || venv=""
if [ -n "$venv" ]; then
    SCADAJS_VENV_PATH="$venv"
fi

if [[ ! -d "$SCADAJS_VENV_PATH" ]]; then
    if [[ -n $SCADAJS_VENV_PATH ]]; then
        echo "$SCADAJS_VENV_PATH variable is set but it's not a valid directory."
        echo "Please ensure that $SCADAJS_VENV_PATH is a valid virtual environment"
    else
        cat <<EOL

    ERROR: We need a virtual environment to work. 

    Please do one of the followings:

    1. Create a virtual environment in THIS directory and name it as "nodeenv".
    2. Set \$SCADAJS_VENV_PATH environment variable beforehand.
    3. Set \$SCADAJS_VENV_PATH environment variable in TMUX.
    4. Pass the virtual environment path as the first argument to this script.

EOL
    fi
    exit 1
fi

echo "Using nodeenv at ${SCADAJS_VENV_PATH}"
if [[ -z $_sourced ]]; then
    bash --rcfile <(echo ". ~/.bashrc; . ${SCADAJS_VENV_PATH}/bin/activate")
else
    . ${SCADAJS_VENV_PATH}/bin/activate
fi

